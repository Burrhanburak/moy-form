
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image',
  website: 'website',
  socialMedia: 'socialMedia',
  twoFactorEnabled: 'twoFactorEnabled',
  stripeCustomerId: 'stripeCustomerId',
  phone: 'phone',
  onboardingCompleted: 'onboardingCompleted',
  companyName: 'companyName',
  companyEmail: 'companyEmail',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  expiresAt: 'expiresAt',
  token: 'token',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  userId: 'userId'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  accountId: 'accountId',
  providerId: 'providerId',
  userId: 'userId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  idToken: 'idToken',
  accessTokenExpiresAt: 'accessTokenExpiresAt',
  refreshTokenExpiresAt: 'refreshTokenExpiresAt',
  scope: 'scope',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationScalarFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  value: 'value',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FeedbackScalarFieldEnum = {
  id: 'id',
  feedback: 'feedback',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PackagesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price',
  description: 'description',
  features: 'features',
  optionalAddons: 'optionalAddons',
  maintenanceRequired: 'maintenanceRequired',
  maintenancePrice: 'maintenancePrice',
  status: 'status',
  numberOfPages: 'numberOfPages',
  referenceImages: 'referenceImages',
  referenceUrls: 'referenceUrls',
  priceRangeMin: 'priceRangeMin',
  priceRangeMax: 'priceRangeMax',
  revisionCount: 'revisionCount',
  deliveryTimeInDays: 'deliveryTimeInDays',
  specialNotes: 'specialNotes',
  isCustomRequest: 'isCustomRequest',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ToolsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price',
  description: 'description',
  features: 'features',
  optionalAddons: 'optionalAddons',
  maintenanceRequired: 'maintenanceRequired',
  maintenancePrice: 'maintenancePrice',
  automationType: 'automationType',
  triggerType: 'triggerType',
  integrations: 'integrations',
  complexity: 'complexity',
  executionFrequency: 'executionFrequency',
  dataVolume: 'dataVolume',
  customRequirements: 'customRequirements',
  apiConnections: 'apiConnections',
  webhookEndpoints: 'webhookEndpoints',
  dataTransformations: 'dataTransformations',
  errorHandling: 'errorHandling',
  monitoring: 'monitoring',
  backupStrategy: 'backupStrategy',
  documentation: 'documentation',
  trainingIncluded: 'trainingIncluded',
  supportLevel: 'supportLevel',
  technicalNotes: 'technicalNotes',
  testingIncluded: 'testingIncluded',
  deploymentType: 'deploymentType',
  scalabilityOptions: 'scalabilityOptions',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SupportTicketScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  title: 'title',
  content: 'content',
  status: 'status',
  priority: 'priority',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  resolvedAt: 'resolvedAt'
};

exports.Prisma.SubscriptionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  stripeSubscriptionId: 'stripeSubscriptionId',
  stripeCustomerId: 'stripeCustomerId',
  stripePriceId: 'stripePriceId',
  stripeProductId: 'stripeProductId',
  status: 'status',
  currentPeriodStart: 'currentPeriodStart',
  currentPeriodEnd: 'currentPeriodEnd',
  cancelAtPeriodEnd: 'cancelAtPeriodEnd',
  canceledAt: 'canceledAt',
  trialStart: 'trialStart',
  trialEnd: 'trialEnd',
  packageId: 'packageId',
  packageName: 'packageName',
  businessField: 'businessField',
  domainName: 'domainName',
  hasDomain: 'hasDomain',
  socialMediaAccounts: 'socialMediaAccounts',
  packageAnswers: 'packageAnswers',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  subscriptionId: 'subscriptionId',
  orderNumber: 'orderNumber',
  formEmail: 'formEmail',
  stripeSessionId: 'stripeSessionId',
  stripePaymentIntentId: 'stripePaymentIntentId',
  stripeSubscriptionId: 'stripeSubscriptionId',
  packageName: 'packageName',
  selectedAddons: 'selectedAddons',
  customerName: 'customerName',
  customerPhone: 'customerPhone',
  companyName: 'companyName',
  companyEmail: 'companyEmail',
  businessField: 'businessField',
  hasDomain: 'hasDomain',
  domainName: 'domainName',
  hasSocialMedia: 'hasSocialMedia',
  socialMediaAccounts: 'socialMediaAccounts',
  packageAnswers: 'packageAnswers',
  logo: 'logo',
  brandColors: 'brandColors',
  contentInfo: 'contentInfo',
  packageId: 'packageId',
  projectDescription: 'projectDescription',
  specialRequirements: 'specialRequirements',
  exampleSites: 'exampleSites',
  additionalNotes: 'additionalNotes',
  packagePrice: 'packagePrice',
  addOnsPrice: 'addOnsPrice',
  totalPrice: 'totalPrice',
  status: 'status',
  claimToken: 'claimToken',
  claimTokenExpiresAt: 'claimTokenExpiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  stripePaymentIntentId: 'stripePaymentIntentId',
  amount: 'amount',
  currency: 'currency',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  type: 'type',
  parentId: 'parentId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ItemScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  image: 'image',
  type: 'type',
  categoryId: 'categoryId',
  price: 'price',
  features: 'features',
  optionalAddons: 'optionalAddons',
  userId: 'userId',
  approved: 'approved',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.PackageStatus = exports.$Enums.PackageStatus = {
  PENDING: 'PENDING',
  ACTIVE: 'ACTIVE',
  CANCELED: 'CANCELED'
};

exports.TicketStatus = exports.$Enums.TicketStatus = {
  PENDING: 'PENDING',
  IN_PROGRESS: 'IN_PROGRESS',
  RESOLVED: 'RESOLVED',
  CLOSED: 'CLOSED'
};

exports.TicketPriority = exports.$Enums.TicketPriority = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  URGENT: 'URGENT'
};

exports.SubscriptionStatus = exports.$Enums.SubscriptionStatus = {
  ACTIVE: 'ACTIVE',
  CANCELED: 'CANCELED',
  INCOMPLETE: 'INCOMPLETE',
  INCOMPLETE_EXPIRED: 'INCOMPLETE_EXPIRED',
  PAST_DUE: 'PAST_DUE',
  TRIALING: 'TRIALING',
  UNPAID: 'UNPAID'
};

exports.OrderStatus = exports.$Enums.OrderStatus = {
  PENDING_PAYMENT: 'PENDING_PAYMENT',
  PAID: 'PAID',
  PROCESSING: 'PROCESSING',
  COMPLETED: 'COMPLETED',
  CANCELED: 'CANCELED',
  FAILED: 'FAILED'
};

exports.CategoryType = exports.$Enums.CategoryType = {
  TOOL: 'TOOL',
  SERVICE: 'SERVICE',
  THEME: 'THEME'
};

exports.ItemType = exports.$Enums.ItemType = {
  TOOL: 'TOOL',
  THEME: 'THEME',
  TEMPLATE: 'TEMPLATE',
  CUSTOM_TOOL: 'CUSTOM_TOOL',
  CUSTOM_THEME: 'CUSTOM_THEME'
};

exports.Prisma.ModelName = {
  User: 'User',
  Session: 'Session',
  Account: 'Account',
  Verification: 'Verification',
  Feedback: 'Feedback',
  Packages: 'Packages',
  Tools: 'Tools',
  SupportTicket: 'SupportTicket',
  Subscription: 'Subscription',
  Order: 'Order',
  Payment: 'Payment',
  Category: 'Category',
  Item: 'Item'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/burakozcan/Desktop/moy-form/lib/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/burakozcan/Desktop/moy-form/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../lib/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id                  String  @id\n  name                String // Personal name from signup\n  email               String // Personal email from signup\n  emailVerified       Boolean @default(false)\n  image               String?\n  website             String? @default(\"\")\n  socialMedia         String? @default(\"\")\n  twoFactorEnabled    Boolean @default(false)\n  stripeCustomerId    String?\n  phone               String? // Personal phone (optional)\n  onboardingCompleted Boolean @default(false) // Onboarding tamamlandı mı\n  items               Item[]\n\n  // Company Information (from form)\n  companyName  String? // Company name (optional)\n  companyEmail String? // Company email (optional) \n\n  createdAt      DateTime        @default(now())\n  updatedAt      DateTime        @default(now()) @updatedAt\n  sessions       Session[]\n  accounts       Account[]\n  feedbacks      Feedback[]\n  packages       Packages[]\n  tools          Tools[]\n  supportTickets SupportTicket[]\n  subscriptions  Subscription[]\n  orders         Order[]\n\n  @@unique([email])\n  @@unique([stripeCustomerId])\n  @@map(\"user\")\n}\n\nmodel Session {\n  id        String   @id\n  expiresAt DateTime\n  token     String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  ipAddress String?\n  userAgent String?\n  userId    String\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([token])\n  @@map(\"session\")\n}\n\nmodel Account {\n  id                    String    @id\n  accountId             String\n  providerId            String\n  userId                String\n  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  accessToken           String?\n  refreshToken          String?\n  idToken               String?\n  accessTokenExpiresAt  DateTime?\n  refreshTokenExpiresAt DateTime?\n  scope                 String?\n  password              String?\n  createdAt             DateTime  @default(now())\n  updatedAt             DateTime  @updatedAt\n\n  @@map(\"account\")\n}\n\nmodel Verification {\n  id         String   @id\n  identifier String\n  value      String\n  expiresAt  DateTime\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @default(now()) @updatedAt\n\n  @@map(\"verification\")\n}\n\nmodel Feedback {\n  id        String   @id @default(cuid())\n  feedback  String\n  userId    String\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"feedback\")\n}\n\nmodel Packages {\n  id                  String        @id @default(cuid())\n  name                String\n  price               Int\n  description         String\n  features            String[]\n  optionalAddons      String[]\n  maintenanceRequired Boolean\n  maintenancePrice    String\n  status              PackageStatus @default(PENDING) // Payment status\n\n  orders Order[]\n\n  subscriptions      Subscription[] // ← bunu ekledik\n  // Site package specific fields\n  numberOfPages      Int? // Kaç sayfalık site\n  referenceImages    String[] // Referans görseller URLs\n  referenceUrls      String[] // Beğendiği site örnekleri\n  priceRangeMin      Int? // Minimum budget\n  priceRangeMax      Int? // Maximum budget\n  revisionCount      Int? // Kaç revizyon hakkı\n  deliveryTimeInDays Int? // Kaç günde teslim\n  specialNotes       String? // Özel istekler ve notlar\n  isCustomRequest    Boolean        @default(false) // Özel paket talebi mi?\n\n  userId String\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"packages\")\n}\n\nenum PackageStatus {\n  PENDING // Waiting for payment\n  ACTIVE // Payment completed\n  CANCELED // Payment failed or canceled\n}\n\nmodel Tools {\n  id                  String   @id @default(cuid())\n  name                String\n  price               Int\n  description         String\n  features            String[]\n  optionalAddons      String[]\n  maintenanceRequired Boolean\n  maintenancePrice    String\n\n  // n8n Automation specific fields\n  automationType      String? // \"workflow\", \"integration\", \"data-processing\", \"notification\", \"custom\"\n  triggerType         String? // \"webhook\", \"schedule\", \"manual\", \"event-based\"\n  integrations        String[] // [\"slack\", \"google-sheets\", \"zapier\", \"api\"]\n  complexity          String? // \"simple\", \"medium\", \"complex\", \"enterprise\"\n  executionFrequency  String? // \"real-time\", \"hourly\", \"daily\", \"weekly\", \"on-demand\"\n  dataVolume          String? // \"low\", \"medium\", \"high\", \"enterprise\"\n  customRequirements  String? // Özel gereksinimler\n  apiConnections      Int? // Kaç API bağlantısı\n  webhookEndpoints    Int? // Kaç webhook endpoint\n  dataTransformations Int? // Kaç veri dönüşümü\n  errorHandling       Boolean  @default(false) // Hata yönetimi var mı\n  monitoring          Boolean  @default(false) // Monitoring var mı\n  backupStrategy      String? // Backup stratejisi\n  documentation       String? // Dokümantasyon dahil mi\n  trainingIncluded    Boolean  @default(false) // Eğitim dahil mi\n  supportLevel        String? // \"basic\", \"standard\", \"premium\", \"enterprise\"\n\n  // Technical specifications\n  technicalNotes     String? // Teknik notlar\n  testingIncluded    Boolean @default(false) // Test dahil mi\n  deploymentType     String? // \"cloud\", \"on-premise\", \"hybrid\"\n  scalabilityOptions String? // Ölçeklenebilirlik seçenekleri\n\n  userId String\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"tools\")\n}\n\nmodel SupportTicket {\n  id         String         @id @default(cuid())\n  userId     String\n  user       User           @relation(fields: [userId], references: [id], onDelete: Cascade)\n  title      String\n  content    String\n  status     TicketStatus   @default(PENDING)\n  priority   TicketPriority @default(MEDIUM)\n  createdAt  DateTime       @default(now())\n  updatedAt  DateTime       @default(now()) @updatedAt\n  resolvedAt DateTime? // Ticket çözüldüğünde doldurulur\n\n  @@map(\"support_ticket\")\n}\n\nenum TicketStatus {\n  PENDING\n  IN_PROGRESS\n  RESOLVED\n  CLOSED\n}\n\nenum TicketPriority {\n  LOW\n  MEDIUM\n  HIGH\n  URGENT\n}\n\nmodel Subscription {\n  id                   String             @id @default(cuid())\n  userId               String\n  user                 User               @relation(fields: [userId], references: [id], onDelete: Cascade)\n  stripeSubscriptionId String             @unique\n  stripeCustomerId     String\n  stripePriceId        String\n  stripeProductId      String\n  status               SubscriptionStatus\n  currentPeriodStart   DateTime\n  currentPeriodEnd     DateTime\n  cancelAtPeriodEnd    Boolean            @default(false)\n  canceledAt           DateTime?\n  trialStart           DateTime?\n  trialEnd             DateTime?\n\n  // Paket ilişkisi\n  packageId String?\n  package   Packages? @relation(fields: [packageId], references: [id])\n\n  // Business Information (eski kayıtlar için yedek alanlar)\n  packageName         String?\n  businessField       String[]\n  domainName          String?\n  hasDomain           String?\n  socialMediaAccounts String[]\n  packageAnswers      Json?\n\n  orders    Order[]\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"subscription\")\n}\n\nenum SubscriptionStatus {\n  ACTIVE\n  CANCELED\n  INCOMPLETE\n  INCOMPLETE_EXPIRED\n  PAST_DUE\n  TRIALING\n  UNPAID\n}\n\nmodel Order {\n  id             String        @id @default(cuid())\n  userId         String? // nullable - order can exist before user signup\n  user           User?         @relation(fields: [userId], references: [id], onDelete: SetNull)\n  subscriptionId String?\n  subscription   Subscription? @relation(fields: [subscriptionId], references: [id])\n\n  // Essential Order Info\n  orderNumber String @unique // human readable short token\n  formEmail   String // email from form (for linking)\n\n  // Stripe Information\n  stripeSessionId       String? @unique\n  stripePaymentIntentId String?\n  stripeSubscriptionId  String?\n\n  // Package Information\n  packageName    String\n  selectedAddons String[]\n\n  // Customer Info from Form (stored as historical record)\n  customerName  String? // name from form\n  customerPhone String? // Personal phone from form\n  companyName   String? // Company name from form  \n  companyEmail  String? // Company email from form (optional)\n\n  // Business Information (from form)\n  businessField       String[]\n  hasDomain           String?\n  domainName          String?\n  hasSocialMedia      String?\n  socialMediaAccounts String[]\n  packageAnswers      Json?\n\n  // Brand and Content Information (from form)\n  logo        String?\n  brandColors String?\n  contentInfo String?\n\n  packageId String?\n  package   Packages? @relation(fields: [packageId], references: [id])\n\n  // Project Details\n  projectDescription  String?\n  specialRequirements String?\n  exampleSites        String?\n  additionalNotes     String?\n\n  // Pricing\n  packagePrice Float\n  addOnsPrice  Float @default(0)\n  totalPrice   Float\n\n  // Status\n  status OrderStatus @default(PENDING_PAYMENT)\n\n  // Claim System\n  claimToken          String?   @unique // for order claiming\n  claimTokenExpiresAt DateTime?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  payments Payment[]\n\n  @@map(\"order\")\n}\n\nenum OrderStatus {\n  PENDING_PAYMENT // Draft order, no payment yet\n  PAID // Payment completed\n  PROCESSING // Order being worked on\n  COMPLETED // Order finished\n  CANCELED // Order canceled\n  FAILED // Payment failed\n}\n\n// Payment records for orders\nmodel Payment {\n  id      String @id @default(cuid())\n  orderId String\n  order   Order  @relation(fields: [orderId], references: [id], onDelete: Cascade)\n\n  stripePaymentIntentId String? @unique\n  amount                Int // Amount in cents\n  currency              String  @default(\"usd\")\n  status                String // succeeded, failed, pending, etc.\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"payment\")\n}\n\nmodel Category {\n  id            String       @id @default(cuid())\n  name          String\n  slug          String       @unique // URL friendly\n  type          CategoryType // TOOL / SERVICE / THEME\n  parentId      String? // null ise root kategori\n  parent        Category?    @relation(\"CategorySubcategories\", fields: [parentId], references: [id])\n  subcategories Category[]   @relation(\"CategorySubcategories\")\n  items         Item[] // Tools / Services / Themes\n  createdAt     DateTime     @default(now())\n  updatedAt     DateTime     @default(now()) @updatedAt\n}\n\nenum CategoryType {\n  TOOL\n  SERVICE\n  THEME\n}\n\nmodel Item {\n  id             String   @id @default(cuid())\n  name           String\n  slug           String   @unique\n  description    String?\n  image          String?\n  type           ItemType\n  categoryId     String\n  category       Category @relation(fields: [categoryId], references: [id])\n  price          Float?\n  features       String[]\n  optionalAddons String[]\n  userId         String? // Custom item oluşturursa userId girilir\n  user           User?    @relation(fields: [userId], references: [id], onDelete: SetNull)\n  approved       Boolean  @default(true) // admin ekliyorsa true, user ekliyorsa onay bekleyebilir\n  createdAt      DateTime @default(now())\n  updatedAt      DateTime @default(now()) @updatedAt\n}\n\nenum ItemType {\n  TOOL\n  THEME\n  TEMPLATE\n  CUSTOM_TOOL\n  CUSTOM_THEME\n}\n",
  "inlineSchemaHash": "9fe9f778a8ba3cc42854dfb46a9028e56378a3a668ab41026853d02a6038d8eb",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"socialMedia\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"twoFactorEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"stripeCustomerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"onboardingCompleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"Item\",\"relationName\":\"ItemToUser\"},{\"name\":\"companyName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"feedbacks\",\"kind\":\"object\",\"type\":\"Feedback\",\"relationName\":\"FeedbackToUser\"},{\"name\":\"packages\",\"kind\":\"object\",\"type\":\"Packages\",\"relationName\":\"PackagesToUser\"},{\"name\":\"tools\",\"kind\":\"object\",\"type\":\"Tools\",\"relationName\":\"ToolsToUser\"},{\"name\":\"supportTickets\",\"kind\":\"object\",\"type\":\"SupportTicket\",\"relationName\":\"SupportTicketToUser\"},{\"name\":\"subscriptions\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"SubscriptionToUser\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToUser\"}],\"dbName\":\"user\"},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":\"session\"},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"},{\"name\":\"accessToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"refreshTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"account\"},\"Verification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"verification\"},\"Feedback\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"feedback\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FeedbackToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"feedback\"},\"Packages\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"features\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"optionalAddons\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maintenanceRequired\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"maintenancePrice\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PackageStatus\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToPackages\"},{\"name\":\"subscriptions\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"PackagesToSubscription\"},{\"name\":\"numberOfPages\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"referenceImages\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"referenceUrls\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priceRangeMin\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"priceRangeMax\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"revisionCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"deliveryTimeInDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"specialNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isCustomRequest\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PackagesToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"packages\"},\"Tools\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"features\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"optionalAddons\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maintenanceRequired\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"maintenancePrice\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"automationType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"triggerType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"integrations\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"complexity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"executionFrequency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dataVolume\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customRequirements\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apiConnections\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"webhookEndpoints\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dataTransformations\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"errorHandling\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"monitoring\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"backupStrategy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"trainingIncluded\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"supportLevel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"technicalNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"testingIncluded\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"deploymentType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scalabilityOptions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ToolsToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"tools\"},\"SupportTicket\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SupportTicketToUser\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TicketStatus\"},{\"name\":\"priority\",\"kind\":\"enum\",\"type\":\"TicketPriority\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"resolvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"support_ticket\"},\"Subscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SubscriptionToUser\"},{\"name\":\"stripeSubscriptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeCustomerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripePriceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeProductId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"SubscriptionStatus\"},{\"name\":\"currentPeriodStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"currentPeriodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cancelAtPeriodEnd\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"canceledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"trialStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"trialEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"packageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"package\",\"kind\":\"object\",\"type\":\"Packages\",\"relationName\":\"PackagesToSubscription\"},{\"name\":\"packageName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessField\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"domainName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hasDomain\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"socialMediaAccounts\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"packageAnswers\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToSubscription\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"subscription\"},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrderToUser\"},{\"name\":\"subscriptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"OrderToSubscription\"},{\"name\":\"orderNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"formEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeSessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripePaymentIntentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeSubscriptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"packageName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"selectedAddons\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessField\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hasDomain\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"domainName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hasSocialMedia\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"socialMediaAccounts\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"packageAnswers\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"brandColors\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contentInfo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"packageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"package\",\"kind\":\"object\",\"type\":\"Packages\",\"relationName\":\"OrderToPackages\"},{\"name\":\"projectDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"specialRequirements\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"exampleSites\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"additionalNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"packagePrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"addOnsPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"totalPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OrderStatus\"},{\"name\":\"claimToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"claimTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"OrderToPayment\"}],\"dbName\":\"order\"},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToPayment\"},{\"name\":\"stripePaymentIntentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"payment\"},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"CategoryType\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategorySubcategories\"},{\"name\":\"subcategories\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategorySubcategories\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"Item\",\"relationName\":\"CategoryToItem\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Item\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ItemType\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToItem\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"features\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"optionalAddons\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ItemToUser\"},{\"name\":\"approved\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

